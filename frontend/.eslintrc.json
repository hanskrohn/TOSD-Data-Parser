{
  "extends": [
    "eslint:recommended",
    "plugin:jsdoc/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "prettier" // Must be last to override
  ],
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint", "prettier", "jsdoc", "filenames"],
  "env": {
    "es6": true,
    "node": true,
    "browser": true,
    "es2021": true
  },
  "parserOptions": {
    "ecmaVersion": 2018,
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "rules": {
    "prettier/prettier": "error",
    "no-console": "warn",
    "quotes": ["error", "single", { "avoidEscape": true, "allowTemplateLiterals": true }],
    "no-return-await": "warn",
    "no-eval": "error",
    "no-restricted-syntax": "error",
    "filenames/match-regex": ["error", "index|^[A-Z][a-z]", true],
    "filenames/match-exported": "warn",
    "jsdoc/require-jsdoc": [
      "warn",
      {
        "require": {
          "ArrowFunctionExpression": true,
          "ClassDeclaration": true,
          "ClassExpression": true,
          "FunctionDeclaration": true,
          "FunctionExpression": true,
          "MethodDefinition": true
        }
      }
    ],
    "jsdoc/require-param-type": "off",
    "jsdoc/require-return-type": "off",
    "jsdoc/require-param": "off",
    "jsdoc/require-returns": "off",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "interface",
        "format": ["PascalCase"],
        "custom": {
          "regex": "^I[A-Z]",
          "match": false
        }
      },
      {
        "selector": "variable",
        "types": ["boolean", "string", "number"],
        "modifiers": ["global", "const"],
        "format": ["UPPER_CASE"]
      },
      { "selector": "variable", "modifiers": ["const"], "format": ["PascalCase", "camelCase"] },
      { "selector": "function", "format": ["PascalCase", "camelCase"] },
      { "selector": "typeLike", "format": ["PascalCase"] },
      { "selector": "memberLike", "format": ["camelCase"] },
      { "selector": "enumMember", "format": ["PascalCase"] },
      { "selector": "variableLike", "format": ["camelCase"] },
      { "selector": "variable", "modifiers": ["destructured"], "format": null },
      { "selector": "parameter", "format": ["camelCase"], "leadingUnderscore": "allow" }
    ]
  },
  "settings": {
    "jsdoc": {
      "mode": "typescript"
    }
  }
}
